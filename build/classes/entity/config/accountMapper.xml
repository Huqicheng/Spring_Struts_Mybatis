<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace references to com.gas.mapper.SomeMapper -->
<mapper namespace="com.gas.mapper.AccountMapper">

	<!-- stucture of the result map -->
	<resultMap type="com.gas.entity.Account" id="accountResultMap">
		<id property="accountId" column="account_id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="status" column="status" />
	</resultMap>
	
	<!-- id equals to the methods in the mapper obect -->
	<!-- alias of Account class is account, which is configured in mbatis.xml -->
	<select id="getAccount" resultType="account">
		<![CDATA[
			select * from account limit 1
        ]]>
	</select>

	<select id="getAllAccount" resultType="list" resultMap="accountResultMap">
		<![CDATA[
			select * from account
        ]]>
	</select>

	<select id="getAccountById" parameterType="long"
		resultType="account" resultMap="accountResultMap">
		<![CDATA[
			select * from account where account_id = #{id}
        ]]>
	</select>

	<select id="getAccountByNames" parameterType="string"
		resultMap="accountResultMap">
		<![CDATA[
			select * from account where username = #{name}
        ]]>
	</select>

	<sql id="user_name_pwd">
		username, password
	</sql>

	<insert id="addAccount" parameterType="account">
		insert into account(account_id, status, username,password)
		values(#{accountId}, #{status}, #{username}, #{password})
	</insert>

	<insert id="addAccount4Key" parameterType="account">
		<selectKey keyProperty="account_id" order="BEFORE" resultType="int">
			select cast(random() * 10000 as Integer) a from #Tab
		</selectKey>
		insert into account(account_id, status, username, password)
		values(#{accountId}, #{status}, #{username}, #{password})
	</insert>

	<update id="editAccount" parameterType="account">
		update account set
		status
		= #{status},
		username = #{username},
		password = #{password}
		where
		account_id = #{accountId}
	</update>

	<delete id="removeAccount" parameterType="long">
		delete from account
		where account_id = #{id}
	</delete>
</mapper>
